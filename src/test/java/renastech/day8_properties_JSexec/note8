
-What is hard coding?
-hardcoding means passing every data inside of class without using any utils or files
-->if you hard code, to be able to change the test daya
you have to go to each test and change data from there.

-Data Driven Testing is running the same test against different datas.
-instead of hardcoding test data inside of test
-We created a properties file and we keep out test data in the file.
-We also used DataProvider annotations from TestNG to be able to do NOT


PropertiesReading utility class
   --> to be able to read from .properties type of file, we created util class.
   -->steps to read from properties file:
      1-Creating object from Properties class
      Properties properties = new Properties();
      2-We need to OPEN the file in
        FileInputStream file=new FileInputStream("path");
      3-We need to load the file to properties object.
        properties.load(file);
      4-We close the previously opened file
        file.close();
//by hiding properties object and getting this object in the getter method is basically an example of encapsulation.

--> JavaScriptExecuter:
    for some actions that selenium that able to handle

    -JavaScriptExecuter is an Interface that helps to execute JavaScript through Selenium Webdriver.
    -JavaScriptExecuter provides two methods "executerscript" & "executerAsyncScript"
    to run javascript on the selected window or current page.
    -This method executes JavaScript in the context of the currently selected frame of window in Selenium.

    JavaScriptExecuter:

    1-We create javaScriptExecuter object and we cast our WebDriver type instance into JavascriptExecutor type
    JavascriptExecutor js=(JavascriptExecutor) driver;

    2-Then we access to the methods that are coming from JavascriptExecutor interface.
    js.executeScript(Script,Arguments);

    For arguments scrolldown , click , window.open etc..
    --you will prefer to use when you are not able to do some actions with selenium

    Scroll in Selenium?
    -with selenium itself you are not able to scroll in the page you need:
    1-JSExecutor
       The syntax of ScrollBy() method is:

       executeScript ("window.scrollBy(x-pixels, y-pixels)");
       x-pixels is the number at x-axis,
       it moves to the left if number is positive and
       it moves to the right if number is negative.
       y-pixels is the number at y-axis,
       it moves to the down if number is positive and
       it moves to the up if number is in negative.

    DRIVER UTILITY

    -initialize the driver without coding too many line for each class
    -Being able to pass the same driver instance when calling methods from other classes.

    Singleton design pattern in DriverUtil:
    -->We create a private constructor, and we also create a getter method
    to allow users to create the instance if this class from getter.
    -->You cannot create an object of that class because you made Private Constructor.
    --there will be always one instance of driver with singleton design pattern
    --achieve out gol from instance
  Example:  https://www.tutorialspoint.com/design_pattern/sigleton_pattern.htm

  -->Headless browser: The only difference between regular browser,
  headless-browser is: headless ones does not open in the machine.
  --headless one will execute your code faster.

  ACTIONS:
  Actions class is a collection of individual Action that you want to perform.
     -->Action class allows us to handle mouse and keyboard actions on the web pages.
     For example:
     -->hover over: moveToElement
     -->right click: contextClick
     -->dragAndDrop: allows us to drag and drop a web element
     -->clickAndHold: clicks onto something and waits for next command
     -->release:

     1-To get Actions methods, we need to create the instance of the actions class.
     2-And pass the driver instance into the constructor
     3-We must use: perform() method at the end to be able to perform any actions method.